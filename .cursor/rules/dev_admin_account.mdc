---
description: 
globs: 
alwaysApply: false
---
# 개발용 관리자 계정

## ⚡ 즉시 사용 가능한 계정 정보
- **이메일**: `admin@psyrehab.dev`
- **비밀번호**: `admin123!`
- **역할**: administrator
- **권한 레벨**: 10 (최고 관리자)

## 🚨 RLS 403 Forbidden 오류 발생 시 즉시 실행
**Supabase RLS (Row Level Security) 정책 위반으로 403 오류가 발생하면:**

### 브라우저 콘솔에서 즉시 실행:
```javascript
// 개발용 관리자로 즉시 로그인
await window.supabase.auth.signInWithPassword({
  email: 'admin@psyrehab.dev',
  password: 'admin123!'
}).then(result => {
  if (result.error) {
    console.log('⚠️ 관리자 로그인 실패:', result.error.message);
  } else {
    console.log('✅ 개발용 관리자로 로그인 성공');
    window.location.reload(); // 페이지 새로고침
  }
});
```

### 코드에서 사용할 때:
```typescript
// 개발용 관리자로 로그인
const { error: signInError } = await supabase.auth.signInWithPassword({
  email: 'admin@psyrehab.dev',
  password: 'admin123!'
})

if (signInError) {
  console.log('⚠️ 관리자 로그인 실패:', signInError.message)
} else {
  console.log('✅ 개발용 관리자로 로그인 성공')
}
```

## 🔍 환경 변수 확인
```javascript
// 브라우저 콘솔에서 환경 변수 상태 확인
console.log('VITE_SUPABASE_URL:', !!import.meta.env.VITE_SUPABASE_URL)
console.log('VITE_SUPABASE_ANON_KEY:', !!import.meta.env.VITE_SUPABASE_ANON_KEY)
console.log('VITE_SUPABASE_SERVICE_ROLE_KEY:', !!import.meta.env.VITE_SUPABASE_SERVICE_ROLE_KEY)
```

## 사용 목적
- 개발 및 테스트 과정에서 Supabase RLS 정책 우회
- 관리자 권한이 필요한 기능 테스트
- 환자 데이터 등 보호된 리소스 접근 테스트
- assessments, patients, social_workers 테이블 접근

## ⚠️ 중요한 규칙
1. **환경변수 문제라고 가정하지 말 것** - 대부분 RLS 정책 문제임
2. **Service Role Key 새로 만들려고 하지 말 것** - 이미 admin 계정으로 해결 가능
3. **무조건 admin 로그인부터 시도할 것** - 다른 복잡한 해결책 시도하기 전에
4. **403 Forbidden = RLS 문제 = admin 로그인 필요**

## 주의사항
- **프로덕션 환경에서는 절대 사용 금지**
- 개발/테스트 목적으로만 사용
- 실제 서비스 배포 시 해당 계정 제거 또는 비활성화 필요

## 권한 범위
- 모든 환자 데이터 읽기/쓰기
- 모든 평가 데이터 읽기/쓰기
- 소셜워커 관리
- 시스템 관리 기능
- 로그 및 통계 조회
- 관리자 패널 모든 기능 접근

## 관련 파일
- [PatientManagement.tsx](mdc:src/pages/PatientManagement.tsx) - 환자 관리 페이지에서 사용
- [GoalSetting.tsx](mdc:src/pages/GoalSetting.tsx) - 목표 설정 페이지에서 사용
- [supabase.ts](mdc:src/lib/supabase.ts) - Supabase 클라이언트 설정
