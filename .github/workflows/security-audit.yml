name: Security Audit

on:
  schedule:
    # 매일 UTC 02:00 (한국시간 11:00)에 실행
    - cron: '0 2 * * *'
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # 수동 실행 가능

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install Dependencies
        run: |
          npm ci
          
      - name: Run Dependency Audit
        continue-on-error: true
        run: |
          npm audit --audit-level=high || echo "::warning::Found vulnerabilities, check the logs"
          
      - name: Run Custom Security Audit
        run: |
          npm run security:audit
          
      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports-node-${{ matrix.node-version }}
          path: security-reports/
          retention-days: 30
          
      # ESLint check moved to separate code-quality workflow
      # to avoid failing security audit on code style issues
          
      - name: Check for Secrets in Code
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified
          
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    # Private 저장소에서는 GitHub Advanced Security가 필요하므로 비활성화
    if: false
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']
        
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
          
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [security-audit, dependency-review, codeql-analysis]
    if: always()
    
    steps:
      - name: Download Security Reports
        uses: actions/download-artifact@v4
        with:
          pattern: security-reports-*
          merge-multiple: true
          path: security-reports/
          
      - name: Create Security Summary
        run: |
          echo "## 🔒 Security Audit Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Dependency Audit**: ${{ needs.security-audit.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Code Analysis**: ${{ needs.codeql-analysis.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dependency Review**: ${{ needs.dependency-review.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Reports Available" >> $GITHUB_STEP_SUMMARY
          echo "Security reports are available as artifacts in this workflow run." >> $GITHUB_STEP_SUMMARY
          
          if [ -f "security-reports/security-audit-*.json" ]; then
            echo "### 🔍 Quick Summary" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`json" >> $GITHUB_STEP_SUMMARY
            cat security-reports/security-audit-*.json | jq '.summary' >> $GITHUB_STEP_SUMMARY || echo "Failed to parse summary"
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          fi 